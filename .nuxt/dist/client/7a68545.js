(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{1166:function(e,t,r){"use strict";r.r(t);var n=r(3),o=r(4),l=(r(42),r(79),r(80),function(){function e(t,r){Object(n.a)(this,e),this.self=r,this.subscribers={},this.requestsPending=0,this.historyProvider=t}return Object(o.a)(e,[{key:"subscribeBars",value:function(e,t,r,n){"4hour"!=this.self.interval&&"240"!=t||(t="240"),"1day"!=this.self.interval&&"1day"!=t||(t="1D"),"1week"!=this.self.interval&&"1week"!=t&&"10080"!=this.self.interval&&"10080"!=t||(t="10080"),"1mon"!=this.self.interval&&"1mon"!=t&&"43200"!=this.self.interval&&"43200"!=t||(t="43200"),this.subscribers[n]={lastBarTime:null,listener:r,resolution:t,symbolInfo:e}}},{key:"unsubscribeBars",value:function(e){delete this.subscribers[e]}},{key:"updateData",value:function(){var e=this;if(2==this.self.connState&&(this.requestsPending=0),!this.requestsPending)for(var t in this.requestsPending=0,this.subscribers)this.requestsPending++,this.updateDataForSubscriber(t).then((function(){return e.requestsPending--})).catch((function(){return e.requestsPending--}))}},{key:"updateDataForSubscriber",value:function(e){var t=this;return new Promise((function(r,n){var o=t.subscribers[e],l=parseInt((Date.now()/1e3).toString()),h=l-t.periodLengthSeconds(o.resolution,10);t.historyProvider.getBars(o.symbolInfo,o.resolution,h,l,(function(n){t.onSubscriberDataReceived(e,n),r()}),(function(){n()}))}))}},{key:"onSubscriberDataReceived",value:function(e,t){if(this.subscribers.hasOwnProperty(e)&&t.length){var r=t[t.length-1],n=this.subscribers[e];if(!(null!==n.lastBarTime&&r.time<n.lastBarTime)){if(null!==n.lastBarTime&&r.time>n.lastBarTime){if(t.length<2)throw new Error("Not enough bars in history for proper pulse update. Need at least 2.");var o=t[t.length-2];n.listener(o)}n.lastBarTime=r.time,n.listener(r)}}}},{key:"periodLengthSeconds",value:function(e,t){return 24*("240"==e?t/6:"D"===e||"1D"===e?t:"M"===e||"1M"===e||"43200"==e?31*t:"W"===e||"1W"===e||"10080"==e?7*t:t*parseInt(e)/1440)*60*60}}]),e}());t.default=l}}]);