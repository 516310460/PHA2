{"version":3,"file":"components/hash-rate-depth-chart.js","sources":["webpack:///./components/HashRate/depth-chart.vue?bafe","webpack:///./components/HashRate/js/utils.js","webpack:///./components/HashRate/depth-chart.vue?ef30","webpack:///./components/HashRate/depth-chart.vue?e4a0","webpack:///./components/HashRate/depth-chart.vue?87ab","webpack:///./components/HashRate/depth-chart.vue","webpack:///./components/HashRate/depth-chart.vue?eef3","webpack:///./components/HashRate/depth-chart.vue?960c"],"sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/@nuxt/postcss8/node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/@nuxt/postcss8/node_modules/postcss-loader/dist/cjs.js??ref--7-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--7-oneOf-1-3!../../node_modules/sass-resources-loader/lib/loader.js??ref--7-oneOf-1-4!../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./depth-chart.vue?vue&type=style&index=0&id=870dfd1a&scoped=true&rel=stylesheet%2Fscss&lang=scss&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add CSS to SSR context\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesServer.js\").default\nmodule.exports.__inject__ = function (context) {\n  add(\"32a8b26e\", content, true, context)\n};","export default {\n  getContext2D(element) {\n    if (element) {\n      return element.getContext('2d');\n    }\n\n    return null;\n  },\n  isEmpty(map) {\n    if (!map) {\n      return true;\n    }\n\n    if (map instanceof Array) {\n      return !map.length;\n    }\n\n    return !Object.keys(map).length;\n  },\n  toPretty(num) {\n    num = num || 0;\n    if (num < 100) {\n      return num.toFixed(2)\n    }\n    if (num < 1e6) {\n      return (num / 1e3).toFixed(1) + ' K'\n    }\n    if (num < 1e7) {\n      return (num / 1e6).toFixed(1) + ' M'\n    }\n    if (num < 1e9) {\n      return (num / 1e6).toFixed(0) + ' M'\n    }\n    if (num < 1e10) {\n      return (num / 1e9).toFixed(1) + ' B'\n    }\n    return (num / 1e9).toFixed(0) + ' B'\n  },\n  toThousand(num = 0) {\n    if (typeof num === 'undefined') {\n      return 0\n    }\n    return (num || 0).toString().replace(/\\d+/, function (n) {\n      let len = n.length;\n      if (len % 3 === 0) {\n        return n.replace(/(\\d{3})/g, ',$1').slice(1)\n      } else {\n        return n.slice(0, len % 3) + n.slice(len % 3).replace(/(\\d{3})/g, ',$1')\n      }\n    })\n  },\n}\n","export * from \"-!../../node_modules/vue-style-loader/index.js??ref--7-oneOf-1-0!../../node_modules/@nuxt/postcss8/node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/@nuxt/postcss8/node_modules/postcss-loader/dist/cjs.js??ref--7-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--7-oneOf-1-3!../../node_modules/sass-resources-loader/lib/loader.js??ref--7-oneOf-1-4!../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./depth-chart.vue?vue&type=style&index=0&id=870dfd1a&scoped=true&rel=stylesheet%2Fscss&lang=scss&\"","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/@nuxt/postcss8/node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(function(i){return i[1]});\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".bk09[data-v-870dfd1a]{\\n  background-color:#09b67d\\n}\\n.bk10[data-v-870dfd1a]{\\n  background:#b8babb!important;\\n  background-color:#b8babb!important\\n}\\n.bk19[data-v-870dfd1a]{\\n  background-color:#f7f7f7\\n}\\n.bk29[data-v-870dfd1a]{\\n  background-color:#fff\\n}\\n.bk34[data-v-870dfd1a]{\\n  background-color:#a3acbd\\n}\\n.bk52[data-v-870dfd1a]{\\n  background-color:#333\\n}\\n.bk62[data-v-870dfd1a]{\\n  background-color:#0b1821\\n}\\n.bk88[data-v-870dfd1a]{\\n  background-color:#02ad8f\\n}\\n.bk112[data-v-870dfd1a]{\\n  background-color:#131722\\n}\\n.bk113[data-v-870dfd1a]{\\n  background-color:#02ad8f\\n}\\n.bk114[data-v-870dfd1a]{\\n  background-color:#222e3e\\n}\\n.bk117[data-v-870dfd1a]{\\n  background-color:#08050c\\n}\\n.bk121[data-v-870dfd1a]{\\n  background-color:#13181a\\n}\\n.bk122[data-v-870dfd1a]{\\n  background-color:#162229\\n}\\n.cl08[data-v-870dfd1a]{\\n  color:#aa5369\\n}\\n.cl09[data-v-870dfd1a]{\\n  color:#09b67d\\n}\\n.cl23[data-v-870dfd1a]{\\n  color:#5c5c5c\\n}\\n.cl24[data-v-870dfd1a]{\\n  color:#858585\\n}\\n.cl25[data-v-870dfd1a]{\\n  color:#adadad\\n}\\n.cl29[data-v-870dfd1a]{\\n  color:#fff\\n}\\n.cl52[data-v-870dfd1a]{\\n  color:#333\\n}\\n.cl75[data-v-870dfd1a]{\\n  color:#959595\\n}\\n.cl77[data-v-870dfd1a]{\\n  color:#cd332d\\n}\\n.cl88[data-v-870dfd1a]{\\n  color:#02ad8f\\n}\\n.cl110[data-v-870dfd1a]{\\n  color:#4adb62\\n}\\n.cl113[data-v-870dfd1a]{\\n  color:#02ad8f\\n}\\n.cl123[data-v-870dfd1a]{\\n  color:#c1d3df\\n}\\n.cl125[data-v-870dfd1a]{\\n  color:#707d8f\\n}\\n.cl127[data-v-870dfd1a]{\\n  color:#08b67e\\n}\\n.cl128[data-v-870dfd1a]{\\n  color:#d5742c\\n}\\n.cl_buy[data-v-870dfd1a]{\\n  color:#03bf7b\\n}\\n.cl_sell[data-v-870dfd1a]{\\n  color:#eb4d5c\\n}\\n.br-cl09[data-v-870dfd1a]{\\n  border:1px solid #09b67d\\n}\\n.br-cl13[data-v-870dfd1a]{\\n  border:1px solid #47545c\\n}\\n.br-cl72[data-v-870dfd1a]{\\n  border:1px solid #ededed\\n}\\n.tl[data-v-870dfd1a]{\\n  text-align:left\\n}\\n.tc[data-v-870dfd1a]{\\n  text-align:center\\n}\\n.tr[data-v-870dfd1a]{\\n  text-align:right\\n}\\n.fl[data-v-870dfd1a]{\\n  float:left\\n}\\n.fr[data-v-870dfd1a]{\\n  float:right\\n}\\n.hover-cl09[data-v-870dfd1a]:hover{\\n  cursor:pointer;\\n  color:#09b67d\\n}\\n.chart-layout[data-v-870dfd1a]{\\n  position:relative;\\n  background:#1e222a\\n}\\n.chart-layout canvas[data-v-870dfd1a]{\\n  position:absolute\\n}\", \"\"]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {};\nmodule.exports = ___CSS_LOADER_EXPORT___;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"depth-chart\",staticClass:\"depth-chart\"},[_vm._ssrNode(\"<div class=\\\"chart-layout\\\"\"+(_vm._ssrStyle(null,_vm.wrapStyles, null))+\" data-v-870dfd1a><canvas\"+(_vm._ssrAttr(\"width\",_vm.fWidth * 2))+(_vm._ssrAttr(\"height\",_vm.fHeight * 2))+\" class=\\\"chart\\\"\"+(_vm._ssrStyle(null,_vm.chartStyles, null))+\" data-v-870dfd1a></canvas> <canvas\"+(_vm._ssrAttr(\"width\",_vm.fWidth))+(_vm._ssrAttr(\"height\",_vm.fHeight))+\" class=\\\"chart-mask\\\" data-v-870dfd1a></canvas> <canvas\"+(_vm._ssrAttr(\"width\",_vm.fWidth))+\" height=\\\"24\\\" class=\\\"chart-x\\\"\"+(_vm._ssrStyle(null,_vm.xStyles, null))+\" data-v-870dfd1a></canvas> <canvas width=\\\"48\\\"\"+(_vm._ssrAttr(\"height\",_vm.fHeight))+\" class=\\\"chart-y\\\"\"+(_vm._ssrStyle(null,_vm.yStyles, null))+\" data-v-870dfd1a></canvas></div>\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport utils from \"./js/utils\";\nexport default {\n  name: 'HelloWorld',\n  props: {\n    bgColor: {\n      type: String,\n      default: '#1E222A'\n    },\n    options: {\n      type: Object,\n      default: null\n    },\n    //买竖线的颜色\n    buyFillColor: {\n      type: String,\n      default: 'rgb(3, 191, 123, 1)'\n    },\n    //卖竖线的颜色\n    sellFillColor: {\n      type: String,\n      default: 'rgb(235, 77, 92)'\n    },\n    gap: {\n      type: Number,\n      default: 10\n    },\n    // 锯齿\n    jagged: {\n      type: Boolean,\n      default: false\n    },\n    paddingTop: {\n      type: Number,\n      default: 10\n    },\n    depthsData: {\n      type: Object,\n      default: {\n        'depths': {\n          'asks': [],\n          'bids': []\n        },\n      }\n    }\n  },\n  data () {\n    return {\n      chart: null,\n      context: null,\n      maskChart: null,\n      maskContext: null,\n      xChart: null,\n      xChartContext: null,\n      yChart: null,\n      yChartContext: null,\n      finalOptions: { ...this.options },\n      fHeight: 0,\n      fWidth: 0,\n      width: 0,\n      height: 0,\n      hasPaint: false,\n      args: null,\n      valueMap: new Map(),\n      valueData: [],//实时买卖数据\n      buyData: [],//买单数据\n      sellData: [],//卖单数据\n      initState: false,\n      timeInterval: null,\n      buyInitState: false,//买单数据初始化状态\n      sellInitState: false,//卖单数据初始化状态\n      timer: null\n    }\n  },\n  computed: {\n    wrapStyles () {\n      return {\n        height: this.fHeight + 24 + 'px'\n      }\n    },\n    chartStyles () {\n      return {\n        backgroundColor: this.bgColor,\n        width: this.fWidth + 'px',\n        height: this.fHeight + 'px'\n      }\n    },\n    xStyles () {\n      return {\n        top: this.fHeight + 'px',\n        left: 0\n      }\n    },\n    yStyles () {\n      return {\n        top: 0,\n        left: this.fWidth + 'px'\n      }\n    },\n    isEmptyData () {\n      let res = {\n        buy: this.buyData,\n        sell: this.sellData\n      }\n      return utils.isEmpty(res)\n    },\n  },\n  watch: {\n    depthsData: { //深度监听，可监听到对象、数组的变化\n      handler (newV, oldV) {\n        // do something, 可使用this\n        if (newV.bids.length) {\n          let newArray = []\n          newV.bids.forEach((item, index) => {\n            newArray.push({\n              index: index,\n              price: item[0],\n              total: item[1],\n              volume: item[1]\n            })\n          });\n          this.buyData = newArray\n        }\n        if (newV.asks.length) {\n          let newArray = []\n          newV.asks.forEach((item, index) => {\n            newArray.push({\n              index: index,\n              price: item[0],\n              total: item[1],\n              volume: item[1]\n            })\n          });\n          this.sellData = newArray.reverse()\n        }\n        if (!this.sellData.length || !this.sellData[0].total || !this.buyData.length || !this.buyData[0].total) return\n        this._initChart();\n      },\n      deep: true\n    }\n  },\n  //离开当前页面就显示底部\n  destroyed () {\n    clearInterval(this.timeInterval)\n    clearTimeout(this.timer)\n  },\n  mounted () {\n    this.$nextTick(() => {\n      this.timer = setTimeout(() => {\n        this.handleResize()\n      })\n      window.addEventListener('resize', this.handleResize);\n      //如果切换了主题就重新渲染\n      this.$bus.on('changeTheme', () => {\n        if (!this.sellData.length || !this.sellData[0].total || !this.buyData.length || !this.buyData[0].total) return\n        this._initChart();\n      })\n    })\n  },\n  beforeDestroy () {\n    this._resetChart();\n  },\n  methods: {\n    //获取当前屏幕宽度和高度\n    handleResize () {\n      //如果一样的高宽不做改变 直接return\n      if (this.width && this.width == this.$refs['depth-chart'].clientWidth && this.height == this.$refs['depth-chart'].clientHeight) {\n        return\n      }\n      this.width = this.$refs['depth-chart'].clientWidth;\n      this.height = this.$refs['depth-chart'].clientHeight;\n      this.fHeight = parseFloat(this.height) - 24;\n      this.fWidth = parseFloat(this.width) - 48;\n      this.initState = false;\n    },\n    _initChart () {\n      this.chart = this.$refs['chart'];\n      this.context = utils.getContext2D(this.chart);\n      this.maskChart = this.$refs['chartMask'];\n      this.maskContext = utils.getContext2D(this.maskChart);\n      this.xChart = this.$refs['xChart'];\n      this.xChartContext = utils.getContext2D(this.xChart);\n      this.yChart = this.$refs['yChart'];\n      this.yChartContext = utils.getContext2D(this.yChart);\n      if (!this.maskContext || !this.xChartContext || !this.yChartContext) return\n      //清除竖线\n      this.maskContext.clearRect(0, 0, parseFloat(this.fWidth), parseFloat(this.fHeight));\n      //清除x轴画布\n      this.xChartContext.clearRect(0, 0, parseFloat(this.fWidth), 24);\n      //清除y轴画布\n      this.yChartContext.clearRect(0, 0, parseFloat(this.fHeight), parseFloat(this.fHeight));\n\n      // this._drawChart(this._initChartData());\n      let res = {\n        buy: this.buyData,\n        sell: this.sellData\n      }\n      this._drawChart(res);\n    },\n    //深度数据填充\n    _initChartData () {\n      const buyLength = this.buyData.length;\n      const sellLength = this.sellData.length;\n\n      let gap;\n      let indexFilter;\n      let result = {};\n\n      if (buyLength && sellLength) {\n        const buy = this.buyData;\n        const buyFirstPrice = Number(buy[0].price);\n        const buyLastPrice = Number(buy[buy.length - 1].price);\n        const buyGap = buy.length > 1 ? Number(buyFirstPrice - buyLastPrice) : buy[0].price;\n\n\n        const sell = this.sellData;\n        const sellFirstPrice = Number(sell[0].price);\n        const sellLastPrice = Number(sell[sell.length - 1].price);\n        const sellGap = Number(sellLastPrice - sellFirstPrice);\n\n        const isBuySmall = buyGap < sellGap;\n\n        if (isBuySmall) {\n          gap = Number(sellFirstPrice + buyGap);\n\n          result['buy'] = this.buyData;\n\n          for (let i = 0; i < this.sellData.length; i++) {\n            let item = this.sellData[i];\n            if (gap === item.price) {\n              indexFilter = i;\n              break;\n            } else if (item.price > gap) {\n              indexFilter = i;\n              break;\n            }\n          }\n\n          result['sell'] = this.sellData.filter((item, index) => indexFilter >= index);\n        } else {\n          gap = Number(buyLastPrice + sellGap);\n\n          result['sell'] = this.sellData;\n\n          for (let i = 0; i < this.buyData.length; i++) {\n            let item = this.buyData[i];\n            if (gap === item.price) {\n              indexFilter = i;\n              break;\n            } else if (item.price > gap) {\n              indexFilter = i;\n              break;\n            }\n          }\n\n          result['buy'] = this.buyData.filter((item, index) => indexFilter <= index);\n        }\n      }\n\n      console.log(result)\n\n      return result;\n    },\n    _resetChart () {\n      this.chart = this.maskChart = this.xChart = this.yChart = null\n    },\n    _drawChart (data) {\n      // if (!this.args) {\n      // this.args = this._calcArgs(data, this.fWidth, this.fHeight);\n      // }\n      //实时监听最大值\n      this.args = this._calcArgs(data, this.fWidth, this.fHeight);\n\n      if (!this.isEmptyData) {\n        const context = this.context;\n        const width = parseFloat(this.fWidth);\n        const height = parseFloat(this.fHeight);\n        this._drawMainCanvas(context, data, width, height, this.args);\n        this._drawXLine(data);\n        this._drawYLine();\n        this.hasPaint = true;\n      }\n    },\n    _calcArgs (data, width, height) {\n      if (!this.isEmptyData || (data.sell.length && !data.sell[data.sell.length - 1].total) || (data.buy.length && !data.buy[data.buy.length - 1].total)) {\n        // const maxAmount = Math.max(data.sell[0].total, data.buy[data.buy.length - 1].total);\n        const maxAmount = Math.max(data.sell[data.sell.length - 1].total, data.buy[data.buy.length - 1].total);\n        const scaleH = maxAmount / height;\n        const scaleW = width / 2 / data.sell.length;\n\n        return {\n          maxAmount,\n          scaleH,\n          scaleW\n        }\n      }\n\n      return null;\n    },\n    //堆积深度图\n    _drawMainCanvas (context, data, width, height, args) {\n      if (!args) {\n        throw new Error('args not ok');\n      }\n\n      if (this.hasPaint) {\n        context.clearRect(0, 0, width, height);\n      }\n      //深度图背景色\n      context.fillStyle = this.$store.state.background == 'day' ? '#FFFFFF' : '#1E222A';\n      // context.fillStyle = '#FFFBF6';\n      context.fillRect(0, 0, width, height);\n\n      if (!this.initState) {\n        this.initState = true;\n        this.context.scale(2, 2)\n      }\n\n      const { maxAmount } = args;\n      const paddingTop = this.paddingTop;\n      const gap = this.gap;\n      const equalWidth = width / 2;\n\n      let tempList = [];\n      let x = 0;\n      let y = paddingTop;\n      let lastPoint = { x, y };\n      let buyLength = data.buy.length;\n      let sellLength = data.sell.length;\n\n      // console.log(data.buy[0])\n      if (buyLength) {\n\n        const scaleW = equalWidth / (buyLength ? buyLength : 1);\n\n        context.beginPath();\n        context.fillStyle = this.buyFillColor;\n\n        for (let i in data.buy) {\n          let item = data.buy[i];\n\n          x = equalWidth - i * scaleW - gap;\n          y = height - item.total / maxAmount * (height - 24);//设置买单深度高度\n\n          if (Number(i) === 0 && x > 0) {\n            context.lineTo(x, height);\n          }\n\n          if (x <= 2) {\n            x = 2\n          }\n\n          tempList.push({\n            x, y,\n            value: item,\n            side: 'buy'\n          });\n\n          if (this.jagged) {\n            context.lineTo(x, lastPoint.y);\n          }\n\n          context.lineTo(x, y);\n          context.stroke();\n          lastPoint = { x, y };\n        }\n\n        context.lineWidth = 3;\n        context.strokeStyle = '#0D7680';\n        context.lineTo(0, y);\n        context.lineTo(0, height);\n        context.lineTo(equalWidth - gap, height);\n        context.stroke();\n        context.fill();\n        context.closePath();\n      }\n\n      if (sellLength) {\n\n        const scaleW = equalWidth / (sellLength ? sellLength : 1);\n\n        context.beginPath();\n        context.fillStyle = this.sellFillColor;\n        context.moveTo(equalWidth + gap, height);\n\n        lastPoint = {\n          x: equalWidth + gap,\n          y: height\n        };\n\n        for (let i in data.sell) {\n          let item = data.sell[i];\n\n          x = equalWidth + i * scaleW + gap;\n          y = height - item.total / maxAmount * (height - 24);//设置卖单深度高度\n\n          if (x > width - 2) {\n            x = width - 2;\n          }\n\n          tempList.push({\n            x, y,\n            value: item,\n            side: 'sell'\n          });\n\n          if (this.jagged) {\n            context.lineTo(x, lastPoint.y);\n          }\n\n          context.lineTo(x, y);\n          lastPoint = { x, y };\n        }\n\n        context.lineWidth = 3;\n        context.strokeStyle = '#8F223A';\n        context.lineTo(width + gap, y);\n        context.lineTo(width + gap, height);\n        context.lineTo(equalWidth + gap, height);\n        context.stroke();\n        context.fill();\n        context.closePath();\n\n        //删除最后一个数组\n        tempList.pop()\n        tempList = tempList.sort((a, b) => a.x - b.x);\n        // console.log(tempList[0])\n\n        // tempList.forEach((item) => this.valueMap.set([item.x, item.y, item.side], item.value));\n        // console.log(this.valueMap.keys())\n        let newArray = [];\n        //组装深度图竖线实时可变数据\n        tempList.forEach((item) => {\n          newArray.push({\n            x: item.x,\n            y: item.y,\n            side: item.side,\n            value: item.value\n          })\n        });\n        this.valueData = newArray\n      }\n    },\n    //深度图x轴\n    _drawXLine (data) {\n      const context = this.xChartContext;\n      const width = parseFloat(this.fWidth);\n\n      if (this.hasPaint) {\n        context.clearRect(0, 0, width, 24);\n      }\n\n      context.font = '10px Sans-Serif';\n      //深度图x坐标轴背景色\n      context.fillStyle = this.$store.state.background == 'day' ? '#1E222A' : '#ffffff';\n      // context.fillStyle = \"rgba(0, 0, 0, 0.35)\";\n\n      let buyLength = data.buy.length;\n      let sellLength = data.sell.length;\n\n      const equalWidth = width / 2;\n      const step = width <= 650 ? 3 : 4;\n\n      this._xPagesFn(buyLength, equalWidth, step, context, data, 'buy', width);\n      this._xPagesFn(sellLength, equalWidth, step, context, data, 'sell', width);\n    },\n    _xPagesFn (length, equalWidth, step, context, data, type, width) {\n      if (length) {\n        let x = 0;\n        let y = 16;\n        const scaleW = equalWidth / (length ? length : 1);\n        const Divisor = Math.ceil(length / step);\n\n        for (let i = 0; i < length; i++) {\n          let item = data[type][i];\n\n          if (i % Divisor) {\n            continue;\n          }\n\n          let text = item.price;\n          let textWidth = Math.floor(context.measureText(text).width);\n\n          if (type === 'sell') {\n            x = equalWidth + 16 + i * scaleW;\n          } else {\n            x = equalWidth - i * scaleW - textWidth;\n          }\n\n          if (x + textWidth >= width) {\n            x = width - textWidth;\n          }\n\n          context.fillText(text, x, y);\n        }\n      }\n    },\n    //深度图y轴\n    _drawYLine () {\n      let x = 0;\n      let y = 0;\n      const height = parseFloat(this.fHeight);\n      const { maxAmount } = this.args;\n      const context = this.yChartContext;\n\n      if (this.hasPaint) {\n        context.clearRect(0, 0, 48, height);\n      }\n\n      context.font = '10px Sans-Serif';\n      //深度图y坐标轴背景色\n      context.fillStyle = this.$store.state.background == 'day' ? '#1E222A' : '#ffffff';\n      // context.fillStyle = \"rgba(0, 0, 0, 0.35)\";\n      // 计算Y轴的每个阶段的值\n      let seg = maxAmount / 5;\n      // for (let i = 1; i < 6; i++) {\n      // Y轴从0 开始\n      for (let i = 0; i < 6; i++) {\n        x = 6;\n        // y = height - seg * (i - 1) / maxAmount * (height - 24);\n        y = height - seg * i / maxAmount * (height - 24);\n        context.fillText(utils.toPretty(seg * i), x, y);\n      }\n    },\n    handleMouseMove ({ offsetX, offsetY }) {\n      const valueMap = this.valueMap;\n      const valueData = this.valueData;\n      const maskContext = this.maskContext;\n      const width = this.fWidth;\n      const height = this.fHeight;\n      const Half = width / 2;\n\n      if (!this.maskContext) return\n\n      maskContext.clearRect(0, 0, width, height);\n\n      // for (let key of valueMap.keys()) {\n      for (let key of valueData) {\n        const x = key.x;\n        const y = key.y;\n        const side = key.side;\n        // const result = valueMap.get(key);\n        const result = key.value;\n        //买卖竖线的颜色\n        const colorsDepth = side === 'buy' ? 'rgb(3, 191, 123, 1)' : 'rgb(235, 77, 92)';\n        const colorsDepthArc = side === 'buy' ? 'rgba(13, 118, 128, 0.35)' : 'rgba(143, 34, 58, 0.35)';\n        const isLeft = offsetX < Half;\n\n        if (offsetX < x) {\n          maskContext.strokeStyle = colorsDepth;\n          maskContext.lineWidth = 2;\n          maskContext.setLineDash([3]);\n          maskContext.clearRect(0, 0, width, height);\n          // maskContext.beginPath();\n          // maskContext.moveTo(0, y);\n          // maskContext.lineTo(width, y);\n          // maskContext.stroke();\n          // maskContext.closePath();\n\n          maskContext.beginPath();\n          maskContext.moveTo(x, y);\n          maskContext.lineTo(x, height);\n          maskContext.stroke();\n          maskContext.closePath();\n\n          maskContext.beginPath();\n          // maskContext.shadowBlur = 10;\n          // maskContext.shadowColor = 'rgba(0, 0, 0, 0.8)';\n\n          maskContext.fillStyle = colorsDepthArc;\n          maskContext.arc(x, y, 10, 0, 2 * Math.PI);\n          maskContext.fill();\n          maskContext.closePath();\n\n          maskContext.beginPath();\n          maskContext.fillStyle = colorsDepth;\n          maskContext.arc(x, y, 5, 0, 2 * Math.PI);\n          maskContext.fill();\n          maskContext.closePath();\n\n\n          maskContext.beginPath();\n          maskContext.fillStyle = this.$store.state.background == 'day' ? 'rgb(248, 249, 251)' : 'rgb(19, 23, 34, .9)';\n          maskContext.font = '12px bold';\n\n\n          let widthOffset = 152;\n          let heightOffset = 96;\n          let left = x - widthOffset / 2;\n          let top = y - heightOffset - 10;\n          let maxTextWidth = Math.max(maskContext.measureText(this.$t('HashRate.pro.depthChart.title1')).width, maskContext.measureText(this.$t('HashRate.pro.depthChart.title2')).width);\n\n          // if(maxTextWidth + 20 > widthOffset) {\n          //   widthOffset = maxTextWidth + 20;\n          // }\n          //\n          // if(left < 0) {\n          //   left = 0\n          // }\n\n          // if(left >= width - widthOffset) {\n          //   left = width - widthOffset;\n          // }\n\n          if (top <= 0) {\n            top = y + 10;\n          }\n\n          const marginLeft = 10;\n          const marginTop = 24;\n          const lineHeight = 20;\n          const leftPos = left + widthOffset / 2;\n          const leftPosAndMargin = left + marginLeft + widthOffset / 2 + 6;\n          const rightPos = left - widthOffset / 2;\n          const rightPosAndMargin = left - marginLeft + widthOffset - 206;\n          const textPos = isLeft ? leftPosAndMargin : rightPosAndMargin;\n\n          // maskContext.fillRect(left, top, widthOffset, heightOffset);\n          this.drawRoundedRect(maskContext, isLeft ? leftPos : rightPos, top, widthOffset, heightOffset, 4, true, false);\n\n          maskContext.fillStyle = colorsDepth;\n          maskContext.fillRect(leftPos, top, 2, heightOffset);\n          maskContext.textAlign = 'left';\n          // maskContext.shadowBlur = 6;\n          // maskContext.shadowColor = 'rgba(255, 206, 167, 0.5)';\n\n          // maskContext.fillStyle = 'rgba(0, 0, 0, 0.65)';\n          maskContext.fillStyle = this.$store.state.background == 'day' ? 'rgb(19, 23, 34)' : '#ffffff';\n          maskContext.fillText(this.$t('HashRate.pro.depthChart.title1'), textPos, top + marginTop);\n          maskContext.fillStyle = this.$store.state.background == 'day' ? 'rgb(19, 23, 34)' : '#ffffff';\n          // maskContext.fillStyle = 'black';\n          maskContext.fillText(utils.toThousand(result.price), textPos, top + marginTop + 16);\n          maskContext.fillStyle = this.$store.state.background == 'day' ? 'rgb(19, 23, 34)' : '#ffffff';\n          // maskContext.fillStyle = 'rgba(0, 0, 0, 0.65)';\n          maskContext.fillText(this.$t('HashRate.pro.depthChart.title2'), textPos, top + marginTop + lineHeight + 24);\n          maskContext.fillStyle = this.$store.state.background == 'day' ? 'rgb(19, 23, 34)' : '#ffffff';\n          // maskContext.fillStyle = 'black';\n          maskContext.fillText(utils.toThousand(result.total), textPos, top + marginTop + lineHeight + 40);\n          maskContext.closePath();\n          break;\n        }\n      }\n    },\n    handleMouseOut () {\n      const maskContext = this.maskContext;\n      const width = this.fWidth;\n      const height = this.fHeight;\n      if (!this.maskContext) return\n      maskContext.clearRect(0, 0, width, height)\n    },\n    drawRoundedRect (ctx, x, y, width, height, r, fill, stroke) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.moveTo(x + r, y);\n      ctx.arcTo(x + width, y, x + width, y + r, r);\n      ctx.arcTo(x + width, y + height, x + width - r, y + height, r);\n      ctx.arcTo(x, y + height, x, y + height - r, r);\n      ctx.arcTo(x, y, x + r, y, r);\n\n      if (fill) {\n        ctx.fill();\n      }\n\n      if (stroke) {\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n}\n","import mod from \"-!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./depth-chart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./depth-chart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./depth-chart.vue?vue&type=template&id=870dfd1a&scoped=true&\"\nimport script from \"./depth-chart.vue?vue&type=script&lang=js&\"\nexport * from \"./depth-chart.vue?vue&type=script&lang=js&\"\nfunction injectStyles (context) {\n  \n  var style0 = require(\"./depth-chart.vue?vue&type=style&index=0&id=870dfd1a&scoped=true&rel=stylesheet%2Fscss&lang=scss&\")\nif (style0.__inject__) style0.__inject__(context)\n\n}\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  injectStyles,\n  \"870dfd1a\",\n  \"e6e25a82\"\n  \n)\n\nexport default component.exports"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACXA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnDA;;;;;;;;ACAA;AAAA;AAAA;AAAA;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPA;AACA;AACA;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAFA;AAhCA;AACA;AAyCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAxBA;AA0BA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAhCA;AAiCA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AA9BA;AADA;AACA;AAifA;AAhKA;;AC7CA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}